When would you want to use a remote repository rather than keeping all your work local?
To share our project with other people around the world so that they can see and share
their changes to it.

Why might you want to always pull changes manually rather than having Git automatically 
stay up-to-date with your remote repository?
Manual pulling gives us the option to choose which commits I want to fetch. If I am 
working on something currently and in between some new commits are made and updated 
automatically on my local repo then it breaks the current line of commits I made
or about to make related to my current work.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
Fork: To clone a GitHub repository from someone else's account into a GitHub repository on your account.
Clone: To create a copy of a GitHub repository on your local machine.
Branch: Create a new line of commits to work on something else in your project.
When to use: To add something to a repository for which I dont have permission to add, I can fork it directly
on my GitHub account and add my changes there. To create new commits to a repository I can clone it on my 
local machine and add changes to it thereby pushing it back to the GitHub repo.

What is the benefit of having a copy of the last known state of the remote stored locally?
This copy shows the last commit made on GitHub repo by any collaborator.
By comparing that commit using git diff with the commit made by us locally we can resolve 
conflicts if any and merge accordingly. Running git status will show us the diverged paths 
of remote branch and our current working branch.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
By making a Google Group and through email. Of course, Git or GitHub would be easier.

When would you want to make changes in a separate branch rather than directly in master? 
What benefits does each approach have?
Making changes in a separate branch ensures that we do not disturb the main master branch. 
The master branch includes all the important commits and if we are experimenting something 
then it's better to do it in a separate branch.
This process is more complex as compared to doing it directly in master. We have to perform 
merge a number of times locally as well as on GitHub.